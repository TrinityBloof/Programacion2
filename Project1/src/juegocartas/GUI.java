/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juegocartas;

import objetos.objCartas;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import codigo.*;

public class GUI extends javax.swing.JFrame {

    Color colorBackground = new Color(39, 119, 20);
    FondoPanel fondo = new FondoPanel();
    ArrayList<objCartas> mazoCartas = new ArrayList<objCartas>();
    ArrayList<objCartas> cartasJugador = new ArrayList<objCartas>();
    ArrayList<objCartas> cartasDealer = new ArrayList<objCartas>();
    CrearMazo crearMazo = new CrearMazo();
    RepartirCartasJugador repartirCartasJugador = new RepartirCartasJugador();
    RepartirCartasDealer repartirCartasDealer = new RepartirCartasDealer();
    SeleccionarPalos seleccionarPalos = new SeleccionarPalos();
    VerificarGanador verficiarGanador = new VerificarGanador();
    MostrarDatos mostrarDatos = new MostrarDatos();
    Font fontCartas = new Font("Times New Roman", Font.BOLD, 40);
    int index3 = -1, index4 = 0;
    String nombre;
    boolean bandera = false;
    ObtenerPalos obtenerPalos = new ObtenerPalos();
    ArrayList<String> arreglo = new ArrayList<String>();
    int corazones = 0, diamantes = 0, treboles = 0, picas = 0;

    ArrayList<Mensajes> Log = new ArrayList<Mensajes>();
    Font fontLog = new Font("Times New Roman", Font.ITALIC, 30);
    Color cDealer = Color.red;
    Color cPJugador = new Color(25, 55, 255);
    String mensaje;

    public GUI() {
        initComponents();
        this.setSize(1580 + 6, 800 + 29);
        mazoCartas = crearMazo.LeerMazoObjetos();
        mensaje = ("Cartas repartidas!");
        Log.add(new Mensajes(mensaje, "Dealer"));
        cartasJugador = repartirCartasJugador.cartasJugador(mazoCartas, cartasJugador);
        cartasDealer = repartirCartasDealer.cartasDealer(mazoCartas, cartasDealer);
        seleccionarPalos.seleccionarPalos(jLabel10, jLabel11, jLabel12, jLabel13);
        jTextField2.setText("0");
        jTextField3.setText("0");
        jTextField4.setText("0");
        mostrarDatos.mostrarDatosObjetos(tbMostrar);
        this.setLocationRelativeTo(null);
        jButton3.setVisible(false);
        tbMostrar.setVisible(false);
        nombre = JOptionPane.showInputDialog("Escriba su nick");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMostrar = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new FondoPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Juego de Cartas");
        setBackground(new java.awt.Color(0, 102, 102));
        setPreferredSize(new java.awt.Dimension(1280, 800));
        setResizable(false);

        tbMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha&Hora", "Nombre Jugador", "Puntaje Final"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbMostrar);

        jButton3.setText("Generar Gráfico");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(566, 566, 566)
                .addComponent(jScrollPane1)
                .addGap(210, 210, 210))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(382, 382, 382))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(423, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(156, 156, 156)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jPanel1.setPreferredSize(new java.awt.Dimension(1580, 800));

        jTextField4.setEditable(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);

        jTextField2.setEditable(false);

        jLabel8.setText("Pts. finales:");

        jLabel7.setText("Perdió:");

        jLabel6.setText("Gano:");

        jButton1.setText("Tirar carta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Palo regular:");

        jLabel4.setText("Palo regular:");

        jLabel3.setText("Palo débil:");

        jLabel2.setText("Palo fuerte:");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Probabilidad de ganes:");

        jButton2.setText("Jugar de nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(93, 93, 93)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(98, 98, 98)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel1)
                                                    .addGap(18, 18, 18))
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addGap(70, 70, 70)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(66, 66, 66)))
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(58, 58, 58)))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(583, 583, 583)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 674, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel5)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)))
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jMenu1.setText("Inicio");
        jMenu1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenu1KeyPressed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        jMenuItem1.setText("Juego");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_TAB, 0));
        jMenuItem2.setText("Ver puntuaciones");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");
        jMenu2.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu2MenuSelected(evt);
            }
        });
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (index4 == 0) {
            String probGanes = JOptionPane.showInputDialog("Por favor dígite la cantidad de veces que creé poder ganar!");
            jTextField1.setText(probGanes);
            index4++;
        } else if (index3 < 9) {
            mensaje = verficiarGanador.verifGanador(jTextField3, jTextField2, jTextField4, cartasJugador, cartasDealer, index3, jLabel10, jLabel11, jLabel12, jLabel13, jTextField1, nombre, tbMostrar);
            Log.add(new Mensajes(mensaje, "Dealer"));
            index3++;
            jPanel1.repaint();
        } else {
            mensaje = ("Juego terminado, prueba a iniciar una nueva partida!");
            Log.add(new Mensajes(mensaje, "Dealer"));
            jPanel1.repaint();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jPanel1.setVisible(false);
        jPanel2.setVisible(true);
        jButton3.setVisible(true);
        tbMostrar.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu2MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu2MenuSelected
        //System.exit(0);
    }//GEN-LAST:event_jMenu2MenuSelected

    private void jMenu1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenu1KeyPressed

    }//GEN-LAST:event_jMenu1KeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jPanel2.setVisible(false);
        jButton3.setVisible(false);
        tbMostrar.setVisible(false);
        jPanel1.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        GUI gui = new GUI();
        gui.repaint();
        gui.setVisible(true);
        jPanel1 = new FondoPanel();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        bandera = true;
        repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable tbMostrar;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel {

        @Override
        public void paintComponent(Graphics g) {
            g.setColor(colorBackground);
            g.fillRect(0, 0, 1580, 800);
            g.setColor(Color.BLACK);
            g.drawRect(20, 20, 1200, 400);
            g.drawRect(20, 20 + 400 + 50, 1200, 280);
            g.drawRect(20 + 1200 + 50, 20, 230, 400);
            g.drawRect(20 + 1200 + 50, 20 + 400 + 50, 230, 280);

            int dimensionCartaW = 1200 / 10;
            int dimensionCartaH = 400 / 2;
            int cartaEspacio = 10;
            int cartaAbsoluteW = dimensionCartaW - 2 * cartaEspacio;
            int cartaAbsoluteH = dimensionCartaH - 2 * cartaEspacio;

            int index = 0;
            for (objCartas c : cartasJugador) {
                g.setColor(Color.WHITE);
                g.fillRect(20 + index * dimensionCartaW + cartaEspacio, 20 + cartaEspacio + 7, cartaAbsoluteW, cartaAbsoluteH - 2 * 7);
                g.fillRect(20 + index * dimensionCartaW + cartaEspacio + 7, 20 + cartaEspacio, cartaAbsoluteW - 2 * 7, cartaAbsoluteH);
                g.fillOval(20 + index * dimensionCartaW + cartaEspacio, 20 + cartaEspacio, 2 * 7, 2 * 7);
                g.fillOval(20 + index * dimensionCartaW + cartaEspacio + cartaAbsoluteW - 2 * 7, 20 + cartaEspacio, 2 * 7, 2 * 7);
                g.fillOval(20 + index * dimensionCartaW + cartaEspacio, 20 + cartaEspacio + cartaAbsoluteH - 2 * 7, 2 * 7, 2 * 7);
                g.fillOval(20 + index * dimensionCartaW + cartaEspacio + cartaAbsoluteW - 2 * 7, 20 + cartaEspacio + cartaAbsoluteH - 2 * 7, 2 * 7, 2 * 7);
                if (c.getForma().equals("Diamantes") || c.getForma().equals("Corazones")) {
                    g.setColor(Color.red);
                } else {
                    g.setColor(Color.black);
                }
                g.setFont(fontCartas);
                g.drawString(c.simbolo, 20 + index * dimensionCartaW + cartaEspacio * 2, 20 + cartaAbsoluteH);
                int x1 = 75 + 5 + index * dimensionCartaW, x2 = 50 + 5 + index * dimensionCartaW, x3 = 75 + 5 + index * dimensionCartaW, x4 = 100 + 5 + index * dimensionCartaW, y1 = 70 + 5, y2 = 110 + 5, y3 = 150 + 5, y4 = 110 + 5;
                int[] xPoly = {x1, x2, x3, x4};
                int[] yPoly = {y1, y2, y3, y4};
                if (c.getForma().equals("Picas")) {
                    g.setColor(Color.black);
                    g.fillOval(5 + index * dimensionCartaW + 40, 5 + 95, 40, 40);
                    g.fillOval(5 + index * dimensionCartaW + 70, 5 + 95, 40, 40);
                    g.fillArc(5 + index * dimensionCartaW + 30, 5 + 38, 90, 70, 230, 80);
                    g.fillRect(5 + index * dimensionCartaW + 70, 5 + 100, 10, 50);
                } else if (c.getForma().equals("Corazones")) {
                    g.setColor(Color.red);
                    g.fillOval(5 + index * dimensionCartaW + 40, 5 + 80, 40, 40);
                    g.fillOval(5 + index * dimensionCartaW + 70, 5 + 80, 40, 40);
                    g.fillArc(5 + index * dimensionCartaW + 30, 5 + 106, 90, 70, 50, 80);
                } else if (c.getForma().equals("Diamantes")) {
                    g.setColor(Color.red);
                    g.fillPolygon(xPoly, yPoly, 4);
                } else if (c.getForma().equals("Treboles")) {
                    g.setColor(Color.black);
                    g.fillOval(5 + index * dimensionCartaW + 35, 5 + 95, 40, 40);
                    g.fillOval(5 + index * dimensionCartaW + 75, 5 + 95, 40, 40);
                    g.fillOval(5 + index * dimensionCartaW + 55, 5 + 65, 40, 40);
                    g.fillRect(5 + index * dimensionCartaW + 70, 5 + 100, 10, 50);
                }
                index++;
            }

            int index2 = 0;
            hola:
            for (objCartas d : cartasDealer) {
                if (index2 - 1 == index3) {
                    break hola;
                }
                g.setColor(Color.WHITE);
                g.fillRect(20 + index2 * dimensionCartaW + cartaEspacio, 20 + cartaEspacio + 200 + 7, cartaAbsoluteW, cartaAbsoluteH - 2 * 7);
                g.fillRect(20 + index2 * dimensionCartaW + cartaEspacio + 7, 20 + cartaEspacio + dimensionCartaH, cartaAbsoluteW - 2 * 7, cartaAbsoluteH);
                g.fillOval(20 + index2 * dimensionCartaW + cartaEspacio, 20 + cartaEspacio + dimensionCartaH, 2 * 7, 2 * 7);
                g.fillOval(20 + index2 * dimensionCartaW + cartaEspacio + cartaAbsoluteW - 2 * 7, 20 + cartaEspacio + dimensionCartaH, 2 * 7, 2 * 7);
                g.fillOval(20 + index2 * dimensionCartaW + cartaEspacio, 20 + cartaEspacio + dimensionCartaH + cartaAbsoluteH - 2 * 7, 2 * 7, 2 * 7);
                g.fillOval(20 + index2 * dimensionCartaW + cartaEspacio + cartaAbsoluteW - 2 * 7, 20 + cartaEspacio + dimensionCartaH + cartaAbsoluteH - 2 * 7, 2 * 7, 2 * 7);
                if (d.getForma().equals("Diamantes") || d.getForma().equals("Corazones")) {
                    g.setColor(Color.red);
                } else {
                    g.setColor(Color.black);
                }
                g.setFont(fontCartas);
                g.drawString(d.simbolo, 20 + index2 * dimensionCartaW + cartaEspacio * 2, 20 + cartaAbsoluteH + dimensionCartaH);
                int x1 = 75 + 5 + index2 * dimensionCartaW, x2 = 50 + 5 + index2 * dimensionCartaW, x3 = 75 + 5 + index2 * dimensionCartaW, x4 = 100 + 5 + index2 * dimensionCartaW, y1 = 70 + 5 + dimensionCartaH, y2 = 110 + 5 + dimensionCartaH, y3 = 150 + 5 + dimensionCartaH, y4 = 110 + 5 + dimensionCartaH;
                int[] xPoly = {x1, x2, x3, x4};
                int[] yPoly = {y1, y2, y3, y4};
                if (d.getForma().equals("Picas")) {
                    g.setColor(Color.black);
                    g.fillOval(5 + index2 * dimensionCartaW + 40, 5 + 95 + dimensionCartaH, 40, 40);
                    g.fillOval(5 + index2 * dimensionCartaW + 70, 5 + 95 + dimensionCartaH, 40, 40);
                    g.fillArc(5 + index2 * dimensionCartaW + 30, 5 + 38 + dimensionCartaH, 90, 70, 230, 80);
                    g.fillRect(5 + index2 * dimensionCartaW + 70, 5 + 100 + dimensionCartaH, 10, 50);
                } else if (d.getForma().equals("Corazones")) {
                    g.setColor(Color.red);
                    g.fillOval(5 + index2 * dimensionCartaW + 40, 5 + 80 + dimensionCartaH, 40, 40);
                    g.fillOval(5 + index2 * dimensionCartaW + 70, 5 + 80 + dimensionCartaH, 40, 40);
                    g.fillArc(5 + index2 * dimensionCartaW + 30, 5 + 106 + dimensionCartaH, 90, 70, 50, 80);
                } else if (d.getForma().equals("Diamantes")) {
                    g.setColor(Color.red);
                    g.fillPolygon(xPoly, yPoly, 4);
                } else if (d.getForma().equals("Treboles")) {
                    g.setColor(Color.black);
                    g.fillOval(5 + index2 * dimensionCartaW + 35, 5 + 95 + dimensionCartaH, 40, 40);
                    g.fillOval(5 + index2 * dimensionCartaW + 75, 5 + 95 + dimensionCartaH, 40, 40);
                    g.fillOval(5 + index2 * dimensionCartaW + 55, 5 + 65 + dimensionCartaH, 40, 40);
                    g.fillRect(5 + index2 * dimensionCartaW + 70, 5 + 100 + dimensionCartaH, 10, 50);
                }
                index2++;
            }

            //Log
            g.setColor(Color.black);
            g.fillRect(20, 20 + 400 + 50, 1200, 280);

            g.setFont(fontLog);
            int logIndex = 0;
            for (Mensajes L : Log) {
                if (L.getWho().equalsIgnoreCase("Dealer")) {
                    g.setColor(cDealer);
                } else {
                    g.setColor(cPJugador);
                }
                if (logIndex == 8) {
                    g.setColor(Color.black);
                    g.fillRect(20, 20 + 400 + 50, 1200, 280);
                    if (L.getWho().equalsIgnoreCase("Dealer")) {
                        g.setColor(cDealer);
                    } else {
                        g.setColor(cPJugador);
                    }
                    logIndex = 0;
                    g.drawString(L.getMessage(), 20 + 20, 20 + 480 + logIndex * 35);
                    logIndex++;
                } else {
                    g.drawString(L.getMessage(), 20 + 20, 20 + 480 + logIndex * 35);
                    logIndex++;
                }
            }
        }
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (bandera == true) {
            arreglo = obtenerPalos.obtenerPalos();
            for (int i = 0; i < arreglo.size(); i++) {
                if ("Corazones".equals(arreglo.get(i))) {
                    corazones++;
                } else if ("Diamantes".equals(arreglo.get(i))) {
                    diamantes++;
                } else if ("Picas".equals(arreglo.get(i))) {
                    picas++;
                } else if ("Treboles".equals(arreglo.get(i))) {
                    treboles++;
                }
            }
            int totalPalos = corazones + diamantes + picas + treboles;
            int largoCorazones = corazones * 800 / totalPalos;
            int largoDiamantes = diamantes * 800 / totalPalos;
            int largoPicas = picas * 800 / totalPalos;
            int largoTreboles = treboles * 800 / totalPalos;

            int porcentajeCorazones = corazones * 100 / totalPalos;
            int porcentajeDiamantes = diamantes * 100 / totalPalos;
            int porcentajePicas = picas * 100 / totalPalos;
            int porcentajeTreboles = treboles * 100 / totalPalos;

            if (corazones > 0) {
                g.setColor(new Color(255, 0, 0));
                g.fillRect(350, 220, largoCorazones, 50);
                g.setColor(new Color(255, 255, 255));
                g.drawString(porcentajeCorazones + "% ♡", 355, 240);
            }

            if (diamantes > 0) {
                g.setColor(new Color(220, 18, 18));
                g.fillRect(350 + largoCorazones, 220, largoDiamantes, 50);
                g.setColor(new Color(255, 255, 255));
                g.drawString(porcentajeDiamantes + "% ♢", 355 + largoCorazones, 240);
            }

            if (picas > 0) {
                g.setColor(new Color(71, 64, 64));
                g.fillRect(350 + largoCorazones + largoDiamantes, 220, largoPicas, 50);
                g.setColor(new Color(255, 255, 255));
                g.drawString(porcentajePicas + "% ♧", 355 + largoCorazones + largoDiamantes, 240);
            }

            if (treboles > 0) {
                g.setColor(new Color(44, 33, 33));
                g.fillRect(350 + largoCorazones + largoDiamantes + largoPicas, 220, largoTreboles, 50);
                g.setColor(new Color(255, 255, 255));
                g.drawString(porcentajeTreboles + "% ☘︎", 355 + largoCorazones + largoDiamantes + largoPicas, 240);
            }
        }
    }
}
